<div style="width: auto; height: auto">
	<script type="text/javascript">
        require([
         	"dojo/store/JsonRest",
			"dojo/store/Memory",
			"dojo/store/Cache",
			"dojox/grid/DataGrid",
			"dojo/data/ObjectStore",
			"dojox/grid/cells",
			"dojox/grid/_CheckBoxSelector"
        ], function(JsonRest,Memory,Cache,DataGrid,ObjectStore,Cells,CheckBoxSelector){
            myStore = Cache(  
                JsonRest({
    				target:"dojo/getProductsPagedAction", 
    				headers: {"Content-Type": "application/json"}, 
    				idProperty: "id",
    				}),   
                Memory({ idProperty: "id" })
			);
            dojo.ready(function(){
          		var cells = [[
                    new Cells.RowIndex({
                        name:"No.", width : "4%"
                    }),    				
					{name:"所属客户", field:"customerName", width: "41%"},
					{name:"产品型号", field:"code", width: "41%"}
    			]];
    			var gridLayout = [{
    					type: "dojox.grid._CheckBoxSelector", width: "4%"
    				}, 
    				cells
    			];
                productGrid = new DataGrid({
                	store: productDataStore = ObjectStore({objectStore: myStore}),
                	query: "",
                    structure: gridLayout,
    				selectionMode: 'multiple',
    				rowsPerPage: 100,
    				autoHeight: "5"
                }, "productMgSearchForm.gridDiv");
    			productGrid.startup();
            });
        });
	</script>
    <div id="productMgSearchForm.gridDiv" style="width: 100%; height: 80%;">
	</div>
    <div id="productMgSearchForm.editMode" style="width: 100%; height: 20%;">
        <div data-dojo-type="dijit/Dialog" id="addProductDialog" title="添加产品" href="LoadAddProductDialog.do">
        </div>
        <button data-dojo-type="dijit/form/Button" id="productMgSearchForm.addButton">
        	<span>添加</span>
        	<script type="dojo/on" data-dojo-event="click">
				if(dijit.byId("addProductDialog").isLoaded){
					dijit.byId("addProductDialog").show();
					dijit.byId("addProductDialog").refresh();
				}else{
					dijit.byId("addProductDialog").show();
				}
        	</script>
        </button>
        <div data-dojo-type="dijit/Dialog" id="editProductDialog" title="编辑产品" href="">
        </div>
	    <button data-dojo-type="dijit/form/Button" id="productMgSearchForm.editButton">
			<span>编辑</span>
			<script type="dojo/on" data-dojo-event="click">
				var items = productGrid.selection.getSelected();
                if (items.length == 0) {
                    alert("请选择需要编辑的产品。");
                }else if (items.length > 1) {
					alert("只能选择一个产品。");
				}else{
					var code = items[0].code;
					dijit.byId("editProductDialog").href="LoadEditProductDialog.do?code=" + code;
    				if(dijit.byId("editProductDialog").isLoaded){
    					dijit.byId("editProductDialog").show();
    					dijit.byId("editProductDialog").refresh();
    				}else{
    					dijit.byId("editProductDialog").show();
    				}
				}
        	</script>
		</button>
	    <button data-dojo-type="dijit/form/Button" id="productMgSearchForm.removeButton">
			<span>删除</span>
			<script type="dojo/on" data-dojo-event="click">
                var items = productGrid.selection.getSelected();
                if (items.length) {
                    if(!confirm('确认删除？')){  
                        return false;
                    }
                    dojo.forEach(items, function (selectedItem) {
                        if (selectedItem !== null) {
                            productDataStore.deleteItem(selectedItem);
                        }
                    });
					saveTable();
                }else{
					alert("请选择需要删除的产品。");
				}
                var onSave = function(){
                	dojo.byId("message").innerHTML = ("Save done.");
                }
                var onSaveError = function(error){
                	alert("Error occurred.");
                }
                function saveTable() {
                    if (productGrid.edit.isEditing()) {
                    	productGrid.edit.apply();
                    }
                    if (productDataStore.isDirty()) {
                    	var result = productDataStore.save({onComplete: onSave, onError: onSaveError});
                    }
                }
        	</script>
		</button>
    </div>
	<div id="message">
	</div>
</div>