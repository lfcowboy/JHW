<!DOCTYPE html>
<html >
<head>
	<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
	<link rel="stylesheet" href="js/dojo/dijit/themes/claro/claro.css">
	<style type="text/css">
        @import "js/dojo/dojox/grid/resources/Grid.css";
        @import "js/dojo/dojox/grid/resources/nihiloGrid.css";
		.dojoxGrid table {
            margin: 0;
        }
	</style>
	<script>dojoConfig = {parseOnLoad: true}</script>
	<script src='js/dojo/dojo/dojo.js'></script>
    <script>
        dojo.require("dojo.store.JsonRest");
        dojo.require("dojo.store.Memory");  
        dojo.require("dojo.store.Cache");
        myStore = dojo.store.Cache(  
            dojo.store.JsonRest({
				target:"dojo/getUsers", 
				headers: {"Content-Type": "application/json"}, 
				idProperty: "id",
				}),   
            dojo.store.Memory({ idProperty: "id" })); 
		dojo.require("dojox.grid.DataGrid");
        dojo.require("dojo.data.ObjectStore");
        dojo.require("dojox/grid/cells");
        dojo.require("dojox/grid/_CheckBoxSelector");
        dojo.ready(function(){
      		var cells = [[
                new dojox.grid.cells.RowIndex({
                    width : "4%"
                }),
				{name:"用户名", field:"account", width: "30%"},
                {name:"名字", field:"name", editable: true, width: "30%"},
                {name:"类型", field:"typeName", width: "30%"}	
			]];
			gridLayout = [{
					type: "dojox.grid._CheckBoxSelector", width: "4%"
				}, 
				cells
			];
            grid = new dojox.grid.DataGrid({
            	store: dataStore = dojo.data.ObjectStore({objectStore: myStore}),
            	query: "",
                structure: gridLayout,
				rowSelector: '2%',
				selectionMode: 'multiple',
				rowsPerPage: 100,
				autoHeight: "5"
            }, "gridDiv");
			grid.startup();
        });
        dojo.addOnLoad(function() {        	
    		var userTypesStore = new dojo.store.JsonRest({
    			target: "getUserTypes.do",
				headers: {"Content-Type": "application/json"}, 
				idProperty: "id"
    		});
    		var userTypes = dijit.byId("type");
    		userTypes.set("store",dojo.data.ObjectStore({objectStore: userTypesStore}));
			userTypes.set("value", "UserType_1");
        });
    </script>
</head>
<body class="claro">
	<div style="width: auto; height: auto">
    	<div id="searchDiv" style="width: 100%; height: 30%;">
    		<div data-dojo-type="dijit/form/Form" id="searchForm" data-dojo-id="searchForm" encType="multipart/form-data" style="width: 100%; height: 100%;">
    			<table style="width: 100%; height: 100%;">
    				<tr>
    		            <td>
    		                <label for="type">用户类型:</label>
    		            </td>
    		            <td>
    						<input data-dojo-type="dijit/form/Select" labelAttr="name" name="type" id="type"/>
    		            </td>
    		            <td>
    		                <label for="name">名字:</label>
    		            </td>
    		            <td>
    		                <input type="text" id="name" name="name" data-dojo-type="dijit/form/ValidationTextBox"/>
    		            </td>
    		        </tr>
    		        <tr>
    		        	<td>
    					    <button data-dojo-type="dijit/form/Button" id="searchBtn" type="button" onClick="queryUsers();">查询</button>
    					    <script>
    					   		function queryUsers() {
    								grid.setQuery(searchForm.get("value"));								
    							}
    					    </script>
    		        	</td>
    		        	<td></td>
    		        	<td></td>
    		        	<td></td>
    		        </tr>
    		    </table>
    	    </div>
        </div>
        <div id="gridDiv" style="width: 100%; height: 50%;">
    	</div>
        <div id="editMode">
            <script>
                require(["dijit/form/Button", "dojo/dom", 
                "dojo/domReady!"], function (Button, dom) {
                    var addButton = new Button({
                        label: " 添加 ",
                        onClick: function () {
                            addBlog();
                        }
                    }, "addButton");
                });
        		function addBlog() {
        			window.location.href="addUser.do";
                }
            </script>
            <button id="addButton">
            </button>
            <script>
                require(["dijit/form/Button", "dojo/dom", 
                "dojo/domReady!"], function (Button, dom) {
                    var editButton = new Button({
                        label: " 编辑 ",
                        onClick: function () {
                            editTable();
                        }
                    }, "editButton");
                });
        		function editTable() {
					var items = grid.selection.getSelected();
                    if (items.length == 0) {
                        alert("请选择需要删除的用户。");
                    }else if (items.length > 1) {
						alert("只能选择一个用户。");
					}else{
						window.location.href="editUser.do?account=" + items[0].account;
					}			
                }
            </script>
            <button id="editButton">
            </button>
            <script>
                require(["dijit/form/Button", "dojo/dom", 
                "dojo/domReady!"], function (Button, dom) {
                    var removeButton = new Button({
                        label: " 删除 ",
                        onClick: function (e) {
                            removeBlog(e);
                        }
                    }, "removeButton");
                });
                function removeBlog(e) {
                    var items = grid.selection.getSelected();
                    if (items.length) {
                        dojo.forEach(items, function (selectedItem) {
                            if (selectedItem !== null) {
                                dataStore.deleteItem(selectedItem);
                            }
                        });
    					saveTable();
                    }else{
						alert("请选择需要删除的用户。");
					}
                }
                var onSave = function(){
                	dojo.byId("message").innerHTML = ("Save done.");
                }
                var onSaveError = function(error){
                	alert("Error occurred.")
                }
                function saveTable() {
                    if (grid.edit.isEditing()) {
                    	grid.edit.apply();
                    }
                    if (dataStore.isDirty()) {
                    	var result = dataStore.save({onComplete: onSave, onError: onSaveError});
                    }
                }
            </script>
            <button id="removeButton">
            </button>
        </div>
    	<div id="message">
    	</div>
    </div>
</body>
</html>